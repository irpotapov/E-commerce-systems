# Generated by Django 5.0.4 on 2024-05-25 13:31

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EducationPrograms',
            fields=[
                ('id_program', models.AutoField(primary_key=True, serialize=False, verbose_name='ID программы')),
                ('title_of_programm', models.CharField(verbose_name='Наименование программы')),
                ('year', models.CharField(verbose_name='Год')),
            ],
            options={
                'verbose_name': 'Образовательная программа',
                'verbose_name_plural': 'Образовательные программы',
                'db_table': 'education_programs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Educator',
            fields=[
                ('id_educator', models.AutoField(primary_key=True, serialize=False, verbose_name='ID преподавателя')),
                ('surname', models.CharField(verbose_name='Фамилия')),
                ('name', models.CharField(verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, null=True, verbose_name='Отчество')),
                ('rank', models.CharField(blank=True, null=True, verbose_name='Звание')),
                ('academic_degree', models.CharField(blank=True, null=True, verbose_name='Степень')),
                ('position', models.CharField(verbose_name='Должность')),
                ('departmen', models.CharField(verbose_name='Кафедра')),
                ('start_work_specialty', models.DateField(blank=True, null=True, verbose_name='Дата начала работы по специальности')),
                ('work_experience', models.IntegerField(blank=True, null=True, verbose_name='Опыт работы по специальности')),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
                'db_table': 'educator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RefresherCourse',
            fields=[
                ('id_course', models.AutoField(primary_key=True, serialize=False)),
                ('type_of_document', models.CharField(verbose_name='Вид документа')),
                ('title_of_document', models.CharField(verbose_name='Название')),
                ('date_completion', models.DateField(verbose_name='Дата прохождения')),
                ('place_of_completion', models.CharField(verbose_name='Место прохождения')),
                ('city_of_completion', models.CharField(blank=True, null=True, verbose_name='Город прохождения')),
                ('link_doc', models.CharField(verbose_name='Ссылка на документ')),
            ],
            options={
                'verbose_name': 'Курсы повышения квалификации',
                'verbose_name_plural': 'Курсы повышения квалификации',
                'db_table': 'refresher_course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScientificWorks',
            fields=[
                ('id_work', models.AutoField(primary_key=True, serialize=False, verbose_name='ID работы')),
                ('type_of_work', models.CharField(verbose_name='Тип работы')),
                ('subtype_of_work', models.CharField(blank=True, null=True, verbose_name='Подтип работы')),
                ('title_of_work', models.CharField(verbose_name='Название работы')),
                ('output_data', models.CharField(verbose_name='Выходные данные')),
            ],
            options={
                'verbose_name': 'Научные работы',
                'verbose_name_plural': 'Научные работы',
                'db_table': 'scientific_works',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id_subject', models.AutoField(primary_key=True, serialize=False, verbose_name='ID дисциплины')),
                ('code_subject', models.IntegerField(unique=True, verbose_name='Код дисциплины')),
                ('title_of_subject', models.CharField(verbose_name='Название дисциплины')),
                ('course', models.CharField(verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Дисциплины',
                'verbose_name_plural': 'Дисциплины',
                'db_table': 'subjects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Umkd',
            fields=[
                ('id_umkd', models.AutoField(primary_key=True, serialize=False, verbose_name='ID УМКД')),
                ('title_of_file', models.CharField(verbose_name='Название файла')),
                ('link_file', models.CharField(verbose_name='Ссылка на файл')),
            ],
            options={
                'verbose_name': 'УМКД',
                'verbose_name_plural': 'УМКД',
                'db_table': 'umkd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WhoIsLeading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_lesson', models.CharField(verbose_name='Тип занятия')),
            ],
            options={
                'verbose_name': 'Кто что ведёт',
                'verbose_name_plural': 'Кто что ведёт',
                'db_table': 'who_is_leading',
                'managed': False,
            },
        ),
    ]
